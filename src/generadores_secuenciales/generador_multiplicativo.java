/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generadores_secuenciales;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jacc
 */
public class generador_multiplicativo extends javax.swing.JFrame {

    private int k = 0; //almacena el valor de k 
    private int d = 0;//almacena el valor de d
    private int a = 0;//almacena el valor de a
    private int c = 0;//almacena el valor de c
    private double x = 0;//almacena el valor de x
    private double m = 0;//almacena el valor de m


    /**
     * Creates new form generador_multiplicativo
     */
    public generador_multiplicativo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        btn_calcular = new javax.swing.JButton();
        txt_x = new javax.swing.JTextField();
        txt_k = new javax.swing.JTextField();
        txt_d = new javax.swing.JTextField();
        lbl_d = new javax.swing.JLabel();
        lbl_k = new javax.swing.JLabel();
        lbl_x = new javax.swing.JLabel();
        lbl_a = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_datos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbl_m = new javax.swing.JLabel();
        lbl_periodo = new javax.swing.JLabel();
        principal = new javax.swing.JLabel();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_calcular.setText("Calcular");
        btn_calcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_calcularMouseClicked(evt);
            }
        });
        btn_calcular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_calcularKeyPressed(evt);
            }
        });
        getContentPane().add(btn_calcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, -1, -1));

        txt_x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_xActionPerformed(evt);
            }
        });
        txt_x.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_xKeyReleased(evt);
            }
        });
        getContentPane().add(txt_x, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 120, -1));

        txt_k.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_kMouseExited(evt);
            }
        });
        txt_k.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_kKeyReleased(evt);
            }
        });
        getContentPane().add(txt_k, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 120, -1));

        txt_d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_dKeyReleased(evt);
            }
        });
        getContentPane().add(txt_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 120, -1));

        lbl_d.setText("Ingrese D:");
        getContentPane().add(lbl_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        lbl_k.setText("Ingrese K:");
        getContentPane().add(lbl_k, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        lbl_x.setText("Ingrese X0:");
        getContentPane().add(lbl_x, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        lbl_a.setText("Valor a = ");
        getContentPane().add(lbl_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        table_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_datos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 640, 440));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel1.setText("Generador secuencial multiplicativo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lbl_m.setText("Valor m=");
        getContentPane().add(lbl_m, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));
        getContentPane().add(lbl_periodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 240, 20));
        getContentPane().add(principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_xActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_xActionPerformed

    private void btn_calcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcularMouseClicked

        if (txt_d.getText().equalsIgnoreCase("") && txt_k.getText().equalsIgnoreCase("") && txt_x.getText().equalsIgnoreCase("")) {//verifica si estan ingresadas todas las variables
            JOptionPane.showMessageDialog(null, "Faltan valores por ingresar", "ERROR", JOptionPane.ERROR_MESSAGE);//enviamos un mensaje de error
        } else {
            double r = 0;//almacena el valor de r = Xn+1
            String columnaCabezera[] = {"n", "Xn", a + "Xn * " + " mod " + m, "Xn+1", "Numeros uniformes"};//almacenamos los valores de la primera fila


            Object datos[][] = new Object[(int) m/4][5];//almacena los datos con el tama√±o de m filas por 5 columnas

            double verificarPeriodo = m/4; // le damos el valor del periodo

            for (int i = 1; i <= m/4; i++) {
                int cont = 1;// variable para contar cuantos periodos se cumplen o cumple
                r = (a * x) % m;//  almacenamos en r el calculo de Xn+1
                
                //le damos los valores a la fila
                datos[i-1][0] = "" + i;//primera columna almacena el valor de cuantas veces recorrio n
                datos[i-1][1] = x + "";//segunda columna almacena el valor de Xn
                datos[i-1][2] = r + " Xn * " + "mod" + m;// tercera columna almacena el valor de (aXn+c)mod m
                datos[i-1][3] = r + ""; //cuarta fila almacena el valor del resultado Xn+1
                datos[i-1][4] = r + "/" + m;// quinta fila almacena el numero uniforme

                x = r;// le damos a x el valor de Xn+1 en este caso r
                if (i==m/4) {//verifica si se cumplio un periodo
                    lbl_periodo.setText("Periodo de vida maximo m/4 = "+m/4);
                    cont++;
                }
            }
            DefaultTableModel dtm = new DefaultTableModel(datos, columnaCabezera);//creamos el modelo para la tabla
            table_datos.setModel(dtm);// le damos el valor del modelo a la tabla
        }
    }//GEN-LAST:event_btn_calcularMouseClicked

    private void txt_kMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kMouseExited


    }//GEN-LAST:event_txt_kMouseExited

    private void txt_kKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kKeyReleased

        try {
            this.k = Integer.parseInt(txt_k.getText());//transformamos el valor de k en caso de que se ingrese un double o string saltara al catch
            //calculamos el valor de a
             a = 5+(8*k);
            lbl_a.setText("Valor a= " + a);//Cambiamos el valor del label
        } catch (NumberFormatException e) {//catch en caso de que se ingrese un decimal u string

            try {
                Double.parseDouble(txt_k.getText());//transformamos a double en caso 
                                                    //de exitir un error saltara a la exepcion
                JOptionPane.showMessageDialog(null, "El valor de K debe ser entero no decimal", "ERROR", JOptionPane.ERROR_MESSAGE);//enviamos el mensaje de error correspondiente
                txt_k.setText("");
                lbl_a.setText("");
            } catch (NumberFormatException e2) {// en caso de existir letras
                JOptionPane.showMessageDialog(null, "Ingrese valores numericos", "ERROR", JOptionPane.ERROR_MESSAGE);//enviamos el mensaje de error correspondiente
                txt_k.setText("");
                lbl_a.setText("");
            }

        }
    }//GEN-LAST:event_txt_kKeyReleased

    private void txt_xKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_xKeyReleased

        try {
            this.x = Double.parseDouble(txt_x.getText());//transformamos el valor ingresado a double 
                                                          //en caso de exitir un error se enviara a la exepcion
            if (this.x < 0) {//verificamos que x sea menor que 0 
                JOptionPane.showMessageDialog(null, "El valor de x debe ser mayor a 0", "ERROR", JOptionPane.ERROR_MESSAGE);//mensaje de error en caso de que d sea menor a 0
                txt_x.setText("");//vaciamos el texto de x
                this.x = 0;//le damos el valor de 0 a x para que se borre el valor anterior
            }
        } catch (NumberFormatException e) {//exepcion en caso de que el usuario ingrese letras o caracteres especiales
            JOptionPane.showMessageDialog(null, "Ingrese valores numericos", "ERROR", JOptionPane.ERROR_MESSAGE);
            txt_x.setText("");
            this.x = 0;//el damos el valor de 0 a x para que se borre el valor anterior
        }
    }//GEN-LAST:event_txt_xKeyReleased

    private void txt_dKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dKeyReleased

        //validamos si el numero es entero
        try {
            this.d = Integer.parseInt(txt_d.getText());//en caso de que el usuario no me ingrese un entero 
                                                        //entonces saltara el error
            //realizamos el calculo para m 
            m = Math.pow(2, d);
            lbl_m.setText("Valor m= " + m);//le damos el valor del label


        } catch (NumberFormatException e) {//exepcion si el usuario ingresa valor no entero
            try {
                Double.parseDouble(txt_d.getText());//en caso de que el valor sea double
                JOptionPane.showMessageDialog(null, "El valor de D debe ser entero no decimal", "ERROR", JOptionPane.ERROR_MESSAGE);
                txt_d.setText("");
                lbl_m.setText("");

            } catch (NumberFormatException e2) {//en caso de que el valor este dado con letras o caracteres
                JOptionPane.showMessageDialog(null, "Ingrese valores numericos", "ERROR", JOptionPane.ERROR_MESSAGE);
                txt_d.setText("");

                lbl_m.setText("");
            }

        }


    }//GEN-LAST:event_txt_dKeyReleased

    private void btn_calcularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_calcularKeyPressed


    }//GEN-LAST:event_btn_calcularKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(generador_multiplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(generador_multiplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(generador_multiplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(generador_multiplicativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new generador_multiplicativo().setVisible(true);
            }
        });

    }

    //retornamos el ultimo valor primo para el calculo de m
    static double obtenerUltimoPrimoM(int numero) {
        int contador = 2; //almacena el conteo desde 2 ya que un primo es divisible para si mismo y para la unidad
        boolean primo = true;//almacena la verificacion de que si el numero es primo o no

        while ((primo) && (contador != numero)) {//mietras primo sea true y contador no sea igual al numero que es ingresado 
            if (numero % contador == 0) { //verificamos que el numero no sea divisible
                primo = false;//retornamos el valor falso en caso de encontrar un numero que sea divisible
            }
            contador++;//aumentamos el contador
        }

        if (primo) {//en caso de ser primo retornamos el numero
            return numero;
        } else {
            return obtenerUltimoPrimoM(numero - 1); //reducimos en uno el valor a buscar
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calcular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lbl_a;
    private javax.swing.JLabel lbl_d;
    private javax.swing.JLabel lbl_k;
    private javax.swing.JLabel lbl_m;
    private javax.swing.JLabel lbl_periodo;
    private javax.swing.JLabel lbl_x;
    private javax.swing.JLabel principal;
    private javax.swing.JTable table_datos;
    private javax.swing.JTextField txt_d;
    private javax.swing.JTextField txt_k;
    private javax.swing.JTextField txt_x;
    // End of variables declaration//GEN-END:variables
}
